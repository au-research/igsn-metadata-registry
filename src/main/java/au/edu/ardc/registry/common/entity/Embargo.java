package au.edu.ardc.registry.common.entity;

import org.hibernate.annotations.GenericGenerator;

import javax.persistence.*;
import java.util.Date;
import java.util.UUID;

@Entity
@Table(name = "embargo")
public class Embargo {

	@Id
	@GeneratedValue(generator = "UUID")
	@GenericGenerator(name = "UUID", strategy = "org.hibernate.id.UUIDGenerator")
	@Column(columnDefinition = "BINARY(16)", updatable = false, nullable = false, unique = true)
	private UUID id;

	@Temporal(TemporalType.TIMESTAMP)
	private Date embargoEnd;

	@ManyToOne(fetch = FetchType.LAZY, optional = false)
	@JoinColumn(name = "record_id", nullable = false)
	private Record record;

	/**
	 * Empty constructor
	 */
	public Embargo() {

	}

	/**
	 * Constructor with uuid Keep in mind the record once persist will have the uuid
	 * generated by Hibernate
	 * @param uuid the UUID to instantiate this embargo for
	 */
	public Embargo(UUID uuid) {
		this.id = uuid;
	}

	public void setEmbargoEnd(Date embargoEnd) {
		this.embargoEnd = embargoEnd;
	}

	public Date getEmbargoEnd() {
		return this.embargoEnd;
	}

	public void setRecord(Record record) {
		this.record = record;
	}

	public Record getRecord() {
		return this.record;
	}

	public UUID getId() {
		return this.id;
	}

}
